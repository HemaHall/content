commonfields:
  id: IsEmailAddressInternal
  version: -1
name: IsEmailAddressInternal
script: |-
  import re
  from distutils.util import strtobool

  emails = [x.lower() for x in argToList(demisto.get(demisto.args(),'email'))]
  domains = [x.lower() for x in argToList(demisto.get(demisto.args(),'domain'))]
  include_subdomains = strtobool(demisto.getArg('include_subdomains') or 'no')

  results = []
  ec = {}

  for email in emails:
      parts = email.split('@',1)
      network_type = "Unknown"
      if len(parts) > 1:
          if parts[1].lower() in domains or include_subdomains and re.match("^(.*\\.)?({})".format('|'.join([re.escape(d) for d in domains])), parts[1].lower()):
              network_type = "Internal"
          else:
              network_type = "External"

          email_dict = {
              "Address" : email,
              "Domain" : parts[1],
              "Username": parts[0],
              "NetworkType" : network_type
          }

          ec['Account.Email(val.Address && val.Address == ' + email_dict["Address"] + ')'] = email_dict

          results.append({
              "NetworkType":email_dict["NetworkType"],
              "Address":email_dict["Address"]
          })


      else:
          demisto.results({ "Type" : entryTypes["error"], "ContentsFormat" : formats["text"], "Contents" : 'Email address ' + email + ' is not valid' })


  md = tableToMarkdown("results:",results)

  demisto.results({
      "Type" : entryTypes["note"],
      "ContentsFormat" : formats["json"],
      "Contents" : '',
      "HumanReadable" : md,
      "EntryContext" : ec
  })
type: python
tags:
- email
comment: Checks if the email address is part of the internal domains
enabled: true
args:
- name: email
  required: true
  default: true
  description: The email address to check
  isArray: true
- name: domain
  description: List of internal domains to check, comma separated
  isArray: true
- name: include_subdomains
  auto: PREDEFINED
  predefined:
  - "yes"
  - "no"
  description: Include subdomains of the domain list?
  defaultValue: "no"
outputs:
- contextPath: Account.Email.Address
  description: The Email account full address
  type: string
- contextPath: Account.Email.Username
  description: The Email account username
  type: string
- contextPath: Account.Email.Domain
  description: The Email account domain
  type: string
- contextPath: Account.Email.NetworkType
  description: The Email account NetworkType (could be Internal/External)
  type: string
scripttarget: 0
runonce: false
releaseNotes: "upgrade script to check list of email addresses"
